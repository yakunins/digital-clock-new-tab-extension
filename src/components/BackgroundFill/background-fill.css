.background-fill {
    --blur-size: 6vh;
    --h1: calc(33.5% + 5%);
    --h2: calc(33.5%);
    --h3: calc(33.5% - 5%);
    --noise: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.616' numOctaves='1' stitchTiles='stitch' /%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' /%3E%3C/svg%3E");

    overflow: hidden;
    position: absolute;
    width: 100vw;
    height: 100vh;
    z-index: 0;

    display: flex;
    justify-content: center;
    align-items: center;

    .layer,
    .layer .mask {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
    }

    .effects.layer {
        backdrop-filter: brightness(95%);
    }

    .noise.layer {
        background-image: var(--noise);
        background-size: 1000px 1000px;
        opacity: 0;
        mix-blend-mode: color-burn;
    }

    .solid-color.layer {
        background-color: var(--bg-color, transparent);
        opacity: var(--bg-opacity, 0);
    }

    .blur.layer {
        filter: blur(var(--blur-size));
        width: calc(100% + var(--blur-size) * 4);
        left: calc(var(--blur-size) * -2);
    }

    .blur.layer > div,
    .gradient.layer > div {
        position: relative;
    }
    .strip-1 {
        background-color: var(--bg-color-1);
        height: var(--h1);
    }
    .strip-1 .mask {
        background-color: var(--bg-color-2);
    }
    .strip-2 {
        background-color: var(--bg-color-2);
        height: var(--h2);
    }
    .strip-2 .mask {
        background-color: var(--bg-color-3);
    }
    .strip-3 {
        background-color: var(--bg-color-3);
        height: var(--h3);
    }
    .strip-3 .mask {
        background-color: var(--bg-color-4);
    }

    .mask {
        mask-image: linear-gradient(180deg, transparent, rgba(0, 0, 0, 0.98));
    }
    .blur.layer *,
    .gradient.layer * {
        transition-property: background-color, height;
        transition-duration: var(--duration, 0.2s);
    }
}
